"use strict";
(self['webpackChunk'] = self['webpackChunk'] || []).push([["panels_network_components_ResponseHeaderSection_js"], {
"./panels/network/components/ResponseHeaderSection.css.js": (function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return __WEBPACK_DEFAULT_EXPORT__; }
});
// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// IMPORTANT: this file is auto generated. Please do not edit this file.
/* istanbul ignore file */ var styles = new CSSStyleSheet();
styles.replaceSync("/*\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\ndevtools-header-section-row:last-of-type {\n  margin-bottom: 10px;\n}\n\ndevtools-header-section-row:first-of-type {\n  margin-top: 2px;\n}\n\n.add-header-button {\n  margin: -4px 0 10px 5px;\n}\n\n/*# sourceURL=ResponseHeaderSection.css */\n");
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);


}),
"./panels/network/components/ResponseHeaderSection.js": (function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  EarlyHintsHeaderSection: function() { return EarlyHintsHeaderSection; },
  RESPONSE_HEADER_SECTION_DATA_KEY: function() { return RESPONSE_HEADER_SECTION_DATA_KEY; },
  ResponseHeaderSection: function() { return ResponseHeaderSection; }
});
/* harmony import */var _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/common/common.js */ "./core/common/common.js");
/* harmony import */var _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/host/host.js */ "./core/host/host.js");
/* harmony import */var _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/i18n/i18n.js */ "./core/i18n/i18n.js");
/* harmony import */var _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/platform/platform.js */ "./core/platform/platform.js");
/* harmony import */var _models_issues_manager_issues_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../models/issues_manager/issues_manager.js */ "./models/issues_manager/issues_manager.js");
/* harmony import */var _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/persistence/persistence.js */ "./models/persistence/persistence.js");
/* harmony import */var _panels_network_forward_forward_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../panels/network/forward/forward.js */ "./panels/network/forward/forward.js");
/* harmony import */var _panels_sources_sources_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../panels/sources/sources.js */ "./panels/sources/sources.js");
/* harmony import */var _ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui/components/buttons/buttons.js */ "./ui/components/buttons/buttons.js");
/* harmony import */var _ui_legacy_legacy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../ui/legacy/legacy.js */ "./ui/legacy/legacy.js");
/* harmony import */var _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../ui/lit-html/lit-html.js */ "./ui/lit-html/lit-html.js");
/* harmony import */var _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../ui/visual_logging/visual_logging.js */ "./ui/visual_logging/visual_logging.js");
/* harmony import */var _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./HeaderSectionRow.js */ "./panels/network/components/HeaderSectionRow.js");
/* harmony import */var _ResponseHeaderSection_css_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ResponseHeaderSection.css.js */ "./panels/network/components/ResponseHeaderSection.css.js");
// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
function _class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) {
        return descriptor.get.call(receiver);
    }
    return descriptor.value;
}
function _class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) {
        descriptor.set.call(receiver, value);
    } else {
        if (!descriptor.writable) {
            throw new TypeError("attempted to set read only private field");
        }
        descriptor.value = value;
    }
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
}
function _class_private_field_get(receiver, privateMap) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
    return _class_apply_descriptor_get(receiver, descriptor);
}
function _class_private_field_init(obj, privateMap, value) {
    _check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function _class_private_field_set(receiver, privateMap, value) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
    _class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
function _class_private_method_get(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return fn;
}
function _class_private_method_init(obj, privateSet) {
    _check_private_redeclaration(obj, privateSet);
    privateSet.add(obj);
}
function _construct(Parent, args, Class) {
    if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
    } else {
        _construct = function construct(Parent, args, Class) {
            var a = [
                null
            ];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _set_prototype_of(instance, Class.prototype);
            return instance;
        };
    }
    return _construct.apply(null, arguments);
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _create_class(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _is_native_function(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _tagged_template_literal(strings, raw) {
    if (!raw) {
        raw = strings.slice(0);
    }
    return Object.freeze(Object.defineProperties(strings, {
        raw: {
            value: Object.freeze(raw)
        }
    }));
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function _wrap_native_super(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    _wrap_native_super = function wrapNativeSuper(Class) {
        if (Class === null || !_is_native_function(Class)) return Class;
        if (typeof Class !== "function") {
            throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }
        function Wrapper() {
            return _construct(Class, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return _set_prototype_of(Wrapper, Class);
    };
    return _wrap_native_super(Class);
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
function _ts_generator(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
function _templateObject() {
    var data = _tagged_template_literal([
        "devtools-early-hints-header-section"
    ]);
    _templateObject = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject1() {
    var data = _tagged_template_literal([
        "\n        <",
        " .data=",
        "></",
        ">\n      "
    ]);
    _templateObject1 = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject2() {
    var data = _tagged_template_literal([
        "\n      ",
        "\n    "
    ]);
    _templateObject2 = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject3() {
    var data = _tagged_template_literal([
        "devtools-response-header-section"
    ]);
    _templateObject3 = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject4() {
    var data = _tagged_template_literal([
        "\n        <",
        "\n            .data=",
        "\n            @headeredited=",
        "\n            @headerremoved=",
        "\n            @enableheaderediting=",
        "\n            data-index=",
        "\n            jslog=",
        "\n        ></",
        ">\n      "
    ]);
    _templateObject4 = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject5() {
    var data = _tagged_template_literal([
        "\n        <",
        '\n          class="add-header-button"\n          .variant=',
        "\n          .iconUrl=",
        "\n          @click=",
        "\n          jslog=",
        ">\n          ",
        "\n        </",
        ">\n      "
    ]);
    _templateObject5 = function _templateObject() {
        return data;
    };
    return data;
}
function _templateObject6() {
    var data = _tagged_template_literal([
        "\n      ",
        "\n      ",
        "\n    "
    ]);
    _templateObject6 = function _templateObject() {
        return data;
    };
    return data;
}














var render = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__.render, html = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__.html;
var UIStrings = {
    /**
     *@description Label for a button which allows adding an HTTP header.
     */ addHeader: 'Add header',
    /**
     *@description Explanation text for which cross-origin policy to set.
     */ chooseThisOptionIfTheResourceAnd: 'Choose this option if the resource and the document are served from the same site.',
    /**
     *@description Explanation text for which cross-origin policy to set.
     */ onlyChooseThisOptionIfAn: 'Only choose this option if an arbitrary website including this resource does not impose a security risk.',
    /**
     *@description Message in the Headers View of the Network panel when a cross-origin opener policy blocked loading a sandbox iframe.
     */ thisDocumentWasBlockedFrom: 'The document was blocked from loading in a popup opened by a sandboxed iframe because this document specified a cross-origin opener policy.',
    /**
     *@description Message in the Headers View of the Network panel when a cross-origin embedder policy header needs to be set.
     */ toEmbedThisFrameInYourDocument: 'To embed this frame in your document, the response needs to enable the cross-origin embedder policy by specifying the following response header:',
    /**
     *@description Message in the Headers View of the Network panel when a cross-origin resource policy header needs to be set.
     */ toUseThisResourceFromADifferent: 'To use this resource from a different origin, the server needs to specify a cross-origin resource policy in the response headers:',
    /**
     *@description Message in the Headers View of the Network panel when the cross-origin resource policy header is too strict.
     */ toUseThisResourceFromADifferentOrigin: 'To use this resource from a different origin, the server may relax the cross-origin resource policy response header:',
    /**
     *@description Message in the Headers View of the Network panel when the cross-origin resource policy header is too strict.
     */ toUseThisResourceFromADifferentSite: 'To use this resource from a different site, the server may relax the cross-origin resource policy response header:'
};
var str_ = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.registerUIStrings('panels/network/components/ResponseHeaderSection.ts', UIStrings);
var i18nString = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.getLocalizedString.bind(undefined, str_);
var i18nLazyString = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);
var plusIconUrl = new URL(/* asset import */__webpack_require__(/*! ../../../Images/plus.svg */ "./Images/plus.svg?c4d0"), __webpack_require__.b).toString();
var RESPONSE_HEADER_SECTION_DATA_KEY = 'ResponseHeaderSection';
var ResponseHeaderSectionBase = /*#__PURE__*/ function(HTMLElement1) {
    "use strict";
    _inherits(ResponseHeaderSectionBase, HTMLElement1);
    var _super = _create_super(ResponseHeaderSectionBase);
    function ResponseHeaderSectionBase() {
        _class_call_check(this, ResponseHeaderSectionBase);
        var _this;
        _this = _super.apply(this, arguments);
        _define_property(_assert_this_initialized(_this), "shadow", _this.attachShadow({
            mode: 'open'
        }));
        _define_property(_assert_this_initialized(_this), "headerDetails", []);
        return _this;
    }
    _create_class(ResponseHeaderSectionBase, [
        {
            key: "connectedCallback",
            value: function connectedCallback() {
                this.shadow.adoptedStyleSheets = [
                    _ResponseHeaderSection_css_js__WEBPACK_IMPORTED_MODULE_13__["default"]
                ];
            }
        },
        {
            key: "setHeaders",
            value: function setHeaders(headers) {
                headers.sort(function(a, b) {
                    return _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.compare(a.name.toLowerCase(), b.name.toLowerCase());
                });
                this.headerDetails = headers.map(function(header) {
                    return {
                        name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString(header.name),
                        value: header.value.replace(/\s/g, ' ')
                    };
                });
            }
        },
        {
            key: "highlightHeaders",
            value: function highlightHeaders(data) {
                var _data_toReveal;
                if (((_data_toReveal = data.toReveal) === null || _data_toReveal === void 0 ? void 0 : _data_toReveal.section) === "Response" /* NetworkForward.UIRequestLocation.UIHeaderSection.Response */ ) {
                    this.headerDetails.filter(function(header) {
                        var _data_toReveal_header, _data_toReveal;
                        return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, (_data_toReveal = data.toReveal) === null || _data_toReveal === void 0 ? void 0 : (_data_toReveal_header = _data_toReveal.header) === null || _data_toReveal_header === void 0 ? void 0 : _data_toReveal_header.toLowerCase());
                    }).forEach(function(header) {
                        header.highlight = true;
                    });
                }
            }
        }
    ]);
    return ResponseHeaderSectionBase;
}(_wrap_native_super(HTMLElement));
var _request = /*#__PURE__*/ new WeakMap(), _render = /*#__PURE__*/ new WeakSet();
var EarlyHintsHeaderSection = /*#__PURE__*/ function(ResponseHeaderSectionBase) {
    "use strict";
    _inherits(EarlyHintsHeaderSection, ResponseHeaderSectionBase);
    var _super = _create_super(EarlyHintsHeaderSection);
    function EarlyHintsHeaderSection() {
        _class_call_check(this, EarlyHintsHeaderSection);
        var _this;
        _this = _super.apply(this, arguments);
        _class_private_method_init(_assert_this_initialized(_this), _render);
        _class_private_field_init(_assert_this_initialized(_this), _request, {
            writable: true,
            value: void 0
        });
        return _this;
    }
    _create_class(EarlyHintsHeaderSection, [
        {
            key: "data",
            set: function set(data) {
                _class_private_field_set(this, _request, data.request);
                this.setHeaders(_class_private_field_get(this, _request).earlyHintsHeaders);
                this.highlightHeaders(data);
                _class_private_method_get(this, _render, render1).call(this);
            }
        }
    ]);
    return EarlyHintsHeaderSection;
}(ResponseHeaderSectionBase);
_define_property(EarlyHintsHeaderSection, "litTagName", _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__.literal(_templateObject()));
function render1() {
    if (!_class_private_field_get(this, _request)) {
        return;
    }
    // Disabled until https://crbug.com/1079231 is fixed.
    // clang-format off
    render(html(_templateObject2(), this.headerDetails.map(function(header) {
        return html(_templateObject1(), _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.HeaderSectionRow.litTagName, {
            header: header
        }, _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.HeaderSectionRow.litTagName);
    })), this.shadow, {
        host: this
    });
// clang-format on
}
customElements.define('devtools-early-hints-header-section', EarlyHintsHeaderSection);
var _request1 = /*#__PURE__*/ new WeakMap(), _headerEditors = /*#__PURE__*/ new WeakMap(), _uiSourceCode = /*#__PURE__*/ new WeakMap(), _overrides = /*#__PURE__*/ new WeakMap(), _isEditingAllowed = /*#__PURE__*/ new WeakMap(), _resetEditorState = /*#__PURE__*/ new WeakSet(), _loadOverridesFileInfo = /*#__PURE__*/ new WeakSet(), _markOverrides = /*#__PURE__*/ new WeakSet(), _onHeaderEdited = /*#__PURE__*/ new WeakSet(), _fileNameFromUrl = /*#__PURE__*/ new WeakSet(), _commitOverrides = /*#__PURE__*/ new WeakSet(), _removeEntryFromOverrides = /*#__PURE__*/ new WeakSet(), _onHeaderRemoved = /*#__PURE__*/ new WeakSet(), _updateOverrides = /*#__PURE__*/ new WeakSet(), _onAddHeaderClick = /*#__PURE__*/ new WeakSet(), _render1 = /*#__PURE__*/ new WeakSet(), _onEnableHeaderEditingClick = /*#__PURE__*/ new WeakSet();
var ResponseHeaderSection = /*#__PURE__*/ function(ResponseHeaderSectionBase) {
    "use strict";
    _inherits(ResponseHeaderSection, ResponseHeaderSectionBase);
    var _super = _create_super(ResponseHeaderSection);
    function ResponseHeaderSection() {
        _class_call_check(this, ResponseHeaderSection);
        var _this;
        _this = _super.apply(this, arguments);
        _class_private_method_init(_assert_this_initialized(_this), _resetEditorState);
        _class_private_method_init(_assert_this_initialized(_this), _loadOverridesFileInfo);
        _class_private_method_init(_assert_this_initialized(_this), _markOverrides);
        _class_private_method_init(_assert_this_initialized(_this), _onHeaderEdited);
        _class_private_method_init(_assert_this_initialized(_this), _fileNameFromUrl);
        _class_private_method_init(_assert_this_initialized(_this), _commitOverrides);
        _class_private_method_init(_assert_this_initialized(_this), _removeEntryFromOverrides);
        _class_private_method_init(_assert_this_initialized(_this), _onHeaderRemoved);
        _class_private_method_init(_assert_this_initialized(_this), _updateOverrides);
        _class_private_method_init(_assert_this_initialized(_this), _onAddHeaderClick);
        _class_private_method_init(_assert_this_initialized(_this), _render1);
        _class_private_method_init(_assert_this_initialized(_this), _onEnableHeaderEditingClick);
        _class_private_field_init(_assert_this_initialized(_this), _request1, {
            writable: true,
            value: void 0
        });
        _class_private_field_init(_assert_this_initialized(_this), _headerEditors, {
            writable: true,
            value: []
        });
        _class_private_field_init(_assert_this_initialized(_this), _uiSourceCode, {
            writable: true,
            value: null
        });
        _class_private_field_init(_assert_this_initialized(_this), _overrides, {
            writable: true,
            value: []
        });
        _class_private_field_init(_assert_this_initialized(_this), _isEditingAllowed, {
            writable: true,
            value: 0 /* EditingAllowedStatus.Disabled */ 
        });
        return _this;
    }
    _create_class(ResponseHeaderSection, [
        {
            key: "data",
            set: function set(data) {
                var _this = this;
                _class_private_field_set(this, _request1, data.request);
                _class_private_field_set(this, _isEditingAllowed, _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(_class_private_field_get(this, _request1).url()) ? 2 /* EditingAllowedStatus.Forbidden */  : 0 /* EditingAllowedStatus.Disabled */ );
                // If the request has been locally overridden, its 'sortedResponseHeaders'
                // contains no 'set-cookie' headers, because they have been filtered out by
                // the Chromium backend. DevTools therefore uses previously stored values.
                var headers = _class_private_field_get(this, _request1).sortedResponseHeaders.concat(_class_private_field_get(this, _request1).setCookieHeaders);
                this.setHeaders(headers);
                var headersWithIssues = [];
                if (_class_private_field_get(this, _request1).wasBlocked()) {
                    var headerWithIssues = BlockedReasonDetails.get(_class_private_field_get(this, _request1).blockedReason());
                    if (headerWithIssues) {
                        if (_models_issues_manager_issues_manager_js__WEBPACK_IMPORTED_MODULE_4__.RelatedIssue.hasIssueOfCategory(_class_private_field_get(this, _request1), "CrossOriginEmbedderPolicy" /* IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy */ )) {
                            var followLink = function() {
                                _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.issuesPanelOpenedFrom(1 /* Host.UserMetrics.IssueOpener.LearnMoreLinkCOEP */ );
                                if (_class_private_field_get(_this, _request1)) {
                                    void _models_issues_manager_issues_manager_js__WEBPACK_IMPORTED_MODULE_4__.RelatedIssue.reveal(_class_private_field_get(_this, _request1), "CrossOriginEmbedderPolicy" /* IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy */ );
                                }
                            };
                            if (headerWithIssues.blockedDetails) {
                                headerWithIssues.blockedDetails.reveal = followLink;
                            }
                        }
                        headersWithIssues.push(headerWithIssues);
                    }
                }
                function mergeHeadersWithIssues(headers, headersWithIssues) {
                    var i = 0, j = 0;
                    var result = [];
                    while(i < headers.length && j < headersWithIssues.length){
                        if (headers[i].name < headersWithIssues[j].name) {
                            result.push(_object_spread_props(_object_spread({}, headers[i++]), {
                                headerNotSet: false
                            }));
                        } else if (headers[i].name > headersWithIssues[j].name) {
                            result.push(_object_spread_props(_object_spread({}, headersWithIssues[j++]), {
                                headerNotSet: true
                            }));
                        } else {
                            result.push(_object_spread_props(_object_spread({}, headersWithIssues[j++], headers[i++]), {
                                headerNotSet: false
                            }));
                        }
                    }
                    while(i < headers.length){
                        result.push(_object_spread_props(_object_spread({}, headers[i++]), {
                            headerNotSet: false
                        }));
                    }
                    while(j < headersWithIssues.length){
                        result.push(_object_spread_props(_object_spread({}, headersWithIssues[j++]), {
                            headerNotSet: true
                        }));
                    }
                    return result;
                }
                this.headerDetails = mergeHeadersWithIssues(this.headerDetails, headersWithIssues);
                var blockedResponseCookies = _class_private_field_get(this, _request1).blockedResponseCookies();
                var blockedCookieLineToReasons = new Map(blockedResponseCookies === null || blockedResponseCookies === void 0 ? void 0 : blockedResponseCookies.map(function(c) {
                    return [
                        c.cookieLine.replace(/\s/g, ' '),
                        c.blockedReasons
                    ];
                }));
                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
                try {
                    for(var _iterator = this.headerDetails[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                        var header = _step.value;
                        if (header.name === 'set-cookie' && header.value) {
                            var matchingBlockedReasons = blockedCookieLineToReasons.get(header.value);
                            if (matchingBlockedReasons) {
                                header.setCookieBlockedReasons = matchingBlockedReasons;
                            }
                        }
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally{
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                            _iterator.return();
                        }
                    } finally{
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
                this.highlightHeaders(data);
                var dataAssociatedWithRequest = _class_private_field_get(this, _request1).getAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY);
                if (dataAssociatedWithRequest) {
                    _class_private_field_set(this, _headerEditors, dataAssociatedWithRequest);
                } else {
                    _class_private_field_set(this, _headerEditors, this.headerDetails.map(function(header) {
                        return {
                            name: header.name,
                            value: header.value,
                            originalValue: header.value,
                            valueEditable: _class_private_field_get(_this, _isEditingAllowed)
                        };
                    }));
                    _class_private_method_get(this, _markOverrides, markOverrides).call(this);
                }
                void _class_private_method_get(this, _loadOverridesFileInfo, loadOverridesFileInfo).call(this);
                _class_private_field_get(this, _request1).setAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY, _class_private_field_get(this, _headerEditors));
                _class_private_method_get(this, _render1, render2).call(this);
            }
        }
    ]);
    return ResponseHeaderSection;
}(ResponseHeaderSectionBase);
_define_property(ResponseHeaderSection, "litTagName", _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__.literal(_templateObject3()));
function resetEditorState() {
    var _this = this;
    if (!_class_private_field_get(this, _request1)) {
        return;
    }
    _class_private_field_set(this, _isEditingAllowed, _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(_class_private_field_get(this, _request1).url()) ? 2 /* EditingAllowedStatus.Forbidden */  : 0 /* EditingAllowedStatus.Disabled */ );
    _class_private_field_set(this, _headerEditors, this.headerDetails.map(function(header) {
        return {
            name: header.name,
            value: header.value,
            originalValue: header.value,
            valueEditable: _class_private_field_get(_this, _isEditingAllowed)
        };
    }));
    _class_private_method_get(this, _markOverrides, markOverrides).call(this);
    _class_private_field_get(this, _request1).setAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY, _class_private_field_get(this, _headerEditors));
}
function loadOverridesFileInfo() {
    return _loadOverridesFileInfo1.apply(this, arguments);
}
function _loadOverridesFileInfo1() {
    _loadOverridesFileInfo1 = _async_to_generator(function() {
        var deferredContent, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, header, error, _$_class_private_field_get;
        return _ts_generator(this, function(_state) {
            switch(_state.label){
                case 0:
                    if (!_class_private_field_get(this, _request1)) {
                        return [
                            2
                        ];
                    }
                    _class_private_field_set(this, _uiSourceCode, _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.instance().getHeadersUISourceCodeFromUrl(_class_private_field_get(this, _request1).url()));
                    if (!_class_private_field_get(this, _uiSourceCode)) {
                        _class_private_method_get(this, _resetEditorState, resetEditorState).call(this);
                        _class_private_method_get(this, _render1, render2).call(this);
                        return [
                            2
                        ];
                    }
                    _state.label = 1;
                case 1:
                    _state.trys.push([
                        1,
                        3,
                        4,
                        5
                    ]);
                    return [
                        4,
                        _class_private_field_get(this, _uiSourceCode).requestContent()
                    ];
                case 2:
                    deferredContent = _state.sent();
                    _class_private_field_set(this, _overrides, JSON.parse(deferredContent.content || '[]'));
                    if (!_class_private_field_get(this, _overrides).every(_models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.isHeaderOverride)) {
                        throw 'Type mismatch after parsing';
                    }
                    if (_core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled').get() && _class_private_field_get(this, _isEditingAllowed) === 0 /* EditingAllowedStatus.Disabled */ ) {
                        _class_private_field_set(this, _isEditingAllowed, 1 /* EditingAllowedStatus.Enabled */ );
                    }
                    _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
                    try {
                        for(_iterator = _class_private_field_get(this, _headerEditors)[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                            header = _step.value;
                            header.valueEditable = _class_private_field_get(this, _isEditingAllowed);
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally{
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return != null) {
                                _iterator.return();
                            }
                        } finally{
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }
                    return [
                        3,
                        5
                    ];
                case 3:
                    error = _state.sent();
                    console.error('Failed to parse', ((_$_class_private_field_get = _class_private_field_get(this, _uiSourceCode)) === null || _$_class_private_field_get === void 0 ? void 0 : _$_class_private_field_get.url()) || 'source code file', 'for locally overriding headers.');
                    _class_private_method_get(this, _resetEditorState, resetEditorState).call(this);
                    return [
                        3,
                        5
                    ];
                case 4:
                    _class_private_method_get(this, _render1, render2).call(this);
                    return [
                        7
                    ];
                case 5:
                    return [
                        2
                    ];
            }
        });
    });
    return _loadOverridesFileInfo1.apply(this, arguments);
}
function markOverrides() {
    var _this, _loop = function() {
        var currentName = _this.headerDetails[indexActual].name;
        var actualValue = _this.headerDetails[indexActual].value || '';
        var headerNotSet = _this.headerDetails[indexActual].headerNotSet;
        while(indexActual < _this.headerDetails.length - 1 && _this.headerDetails[indexActual + 1].name === currentName){
            indexActual++;
            actualValue += ", ".concat(_this.headerDetails[indexActual].value);
        }
        while(indexOriginal < originalHeaders.length && originalHeaders[indexOriginal].name < currentName){
            indexOriginal++;
        }
        if (indexOriginal < originalHeaders.length && originalHeaders[indexOriginal].name === currentName) {
            var originalValue = originalHeaders[indexOriginal].value;
            while(indexOriginal < originalHeaders.length - 1 && originalHeaders[indexOriginal + 1].name === currentName){
                indexOriginal++;
                originalValue += ", ".concat(originalHeaders[indexOriginal].value);
            }
            indexOriginal++;
            if (currentName !== 'set-cookie' && !headerNotSet && !(0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(actualValue, originalValue)) {
                _class_private_field_get(_this, _headerEditors).filter(function(header) {
                    return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, currentName);
                }).forEach(function(header) {
                    header.isOverride = true;
                });
            }
        } else if (currentName !== 'set-cookie' && !headerNotSet) {
            _class_private_field_get(_this, _headerEditors).filter(function(header) {
                return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, currentName);
            }).forEach(function(header) {
                header.isOverride = true;
            });
        }
        indexActual++;
    };
    var _this1 = this;
    if (!_class_private_field_get(this, _request1) || _class_private_field_get(this, _request1).originalResponseHeaders.length === 0) {
        return;
    }
    var originalHeaders = _class_private_field_get(this, _request1).originalResponseHeaders.map(function(header) {
        return {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString(header.name),
            value: header.value.replace(/\s/g, ' ')
        };
    });
    originalHeaders.sort(function(a, b) {
        return _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.compare(a.name, b.name);
    });
    // Loop over actual headers and original headers simultaneously and mark each actual header as
    // overridden if there is no identical original header.
    // If there are multiple headers with the same name, concatenate their values first before
    // comparing them.
    var indexActual = 0;
    var indexOriginal = 0;
    while(indexActual < this.headerDetails.length)_this = this, _loop();
    // Special case for 'set-cookie' headers: compare each header individually
    // and don't treat all 'set-cookie' headers as a single unit.
    _class_private_field_get(this, _headerEditors).filter(function(header) {
        return header.name === 'set-cookie';
    }).forEach(function(header) {
        var _$_class_private_field_get;
        if (((_$_class_private_field_get = _class_private_field_get(_this1, _request1)) === null || _$_class_private_field_get === void 0 ? void 0 : _$_class_private_field_get.originalResponseHeaders.find(function(originalHeader) {
            return _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString(originalHeader.name) === 'set-cookie' && (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(originalHeader.value, header.value);
        })) === undefined) {
            header.isOverride = true;
        }
    });
}
function onHeaderEdited(event) {
    var target = event.target;
    if (target.dataset.index === undefined) {
        return;
    }
    var index = Number(target.dataset.index);
    if ((0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.isValidHeaderName)(event.headerName)) {
        _class_private_method_get(this, _updateOverrides, updateOverrides).call(this, event.headerName, event.headerValue, index);
        _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.actionTaken(_core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.UserMetrics.Action.HeaderOverrideHeaderEdited);
    }
}
function fileNameFromUrl(url) {
    var rawPath = _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.instance().rawPathFromUrl(url, true);
    var lastIndexOfSlash = rawPath.lastIndexOf('/');
    return _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.ParsedURL.ParsedURL.substring(rawPath, lastIndexOfSlash + 1);
}
function commitOverrides() {
    var _$_class_private_field_get, _$_class_private_field_get1;
    (_$_class_private_field_get = _class_private_field_get(this, _uiSourceCode)) === null || _$_class_private_field_get === void 0 ? void 0 : _$_class_private_field_get.setWorkingCopy(JSON.stringify(_class_private_field_get(this, _overrides), null, 2));
    (_$_class_private_field_get1 = _class_private_field_get(this, _uiSourceCode)) === null || _$_class_private_field_get1 === void 0 ? void 0 : _$_class_private_field_get1.commitWorkingCopy();
}
function removeEntryFromOverrides(rawFileName, headerName, headerValue) {
    for(var blockIndex = _class_private_field_get(this, _overrides).length - 1; blockIndex >= 0; blockIndex--){
        var block = _class_private_field_get(this, _overrides)[blockIndex];
        if (block.applyTo !== rawFileName) {
            continue;
        }
        var foundIndex = block.headers.findIndex(function(header) {
            return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, headerName) && (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.value, headerValue);
        });
        if (foundIndex < 0) {
            continue;
        }
        block.headers.splice(foundIndex, 1);
        if (block.headers.length === 0) {
            _class_private_field_get(this, _overrides).splice(blockIndex, 1);
        }
        return;
    }
}
function onHeaderRemoved(event) {
    var target = event.target;
    if (target.dataset.index === undefined || !_class_private_field_get(this, _request1)) {
        return;
    }
    var index = Number(target.dataset.index);
    var rawFileName = _class_private_method_get(this, _fileNameFromUrl, fileNameFromUrl).call(this, _class_private_field_get(this, _request1).url());
    _class_private_method_get(this, _removeEntryFromOverrides, removeEntryFromOverrides).call(this, rawFileName, event.headerName, event.headerValue);
    _class_private_method_get(this, _commitOverrides, commitOverrides).call(this);
    _class_private_field_get(this, _headerEditors)[index].isDeleted = true;
    _class_private_method_get(this, _render1, render2).call(this);
    _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.actionTaken(_core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.UserMetrics.Action.HeaderOverrideHeaderRemoved);
}
function updateOverrides(headerName, headerValue, index) {
    if (!_class_private_field_get(this, _request1)) {
        return;
    }
    // If 'originalResponseHeaders' are not populated (because there was no
    // request interception), fill them with a copy of 'sortedResponseHeaders'.
    // This ensures we have access to the original values when undoing edits.
    if (_class_private_field_get(this, _request1).originalResponseHeaders.length === 0) {
        _class_private_field_get(this, _request1).originalResponseHeaders = _class_private_field_get(this, _request1).sortedResponseHeaders.map(function(headerEntry) {
            return _object_spread({}, headerEntry);
        });
    }
    var previousName = _class_private_field_get(this, _headerEditors)[index].name;
    var previousValue = _class_private_field_get(this, _headerEditors)[index].value;
    _class_private_field_get(this, _headerEditors)[index].name = headerName;
    _class_private_field_get(this, _headerEditors)[index].value = headerValue;
    var headersToUpdate = [];
    if (headerName === 'set-cookie') {
        // Special case for 'set-cookie' headers: each such header is treated
        // separately without looking at other 'set-cookie' headers.
        headersToUpdate.push({
            name: headerName,
            value: headerValue,
            valueEditable: _class_private_field_get(this, _isEditingAllowed)
        });
    } else {
        // If multiple headers have the same name 'foo', we treat them as a unit.
        // If there are overrides for 'foo', all original 'foo' headers are removed
        // and replaced with the override(s) for 'foo'.
        headersToUpdate = _class_private_field_get(this, _headerEditors).filter(function(header) {
            return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, headerName) && (!(0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.value, header.originalValue) || header.isOverride);
        });
    }
    var rawFileName = _class_private_method_get(this, _fileNameFromUrl, fileNameFromUrl).call(this, _class_private_field_get(this, _request1).url());
    // If the last override-block matches 'rawFileName', use this last block.
    // Otherwise just append a new block at the end. We are not using earlier
    // blocks, because they could be overruled by later blocks, which contain
    // wildcards in the filenames they apply to.
    var block = null;
    var _class_private_field_get_slice = _sliced_to_array(_class_private_field_get(this, _overrides).slice(-1), 1), lastOverride = _class_private_field_get_slice[0];
    if ((lastOverride === null || lastOverride === void 0 ? void 0 : lastOverride.applyTo) === rawFileName) {
        block = lastOverride;
    } else {
        block = {
            applyTo: rawFileName,
            headers: []
        };
        _class_private_field_get(this, _overrides).push(block);
    }
    if (headerName === 'set-cookie') {
        // Special case for 'set-cookie' headers: only remove the one specific
        // header which is currently being modified, keep all other headers
        // (including other 'set-cookie' headers).
        var foundIndex = block.headers.findIndex(function(header) {
            return (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, previousName) && (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.value, previousValue);
        });
        if (foundIndex >= 0) {
            block.headers.splice(foundIndex, 1);
        }
    } else {
        // Keep header overrides for all headers with a different name.
        block.headers = block.headers.filter(function(header) {
            return !(0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(header.name, headerName);
        });
    }
    // If a header name has been edited (only possible when adding headers),
    // remove the previous override entry.
    if (!(0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(_class_private_field_get(this, _headerEditors)[index].name, previousName)) {
        for(var i = 0; i < block.headers.length; ++i){
            if ((0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(block.headers[i].name, previousName) && (0,_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.compareHeaders)(block.headers[i].value, previousValue)) {
                block.headers.splice(i, 1);
                break;
            }
        }
    }
    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
    try {
        // Append freshly edited header overrides.
        for(var _iterator = headersToUpdate[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
            var header = _step.value;
            block.headers.push({
                name: header.name,
                value: header.value || ''
            });
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally{
        try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
            }
        } finally{
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
    if (block.headers.length === 0) {
        _class_private_field_get(this, _overrides).pop();
    }
    _class_private_method_get(this, _commitOverrides, commitOverrides).call(this);
}
function onAddHeaderClick() {
    _class_private_field_get(this, _headerEditors).push({
        name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString(_core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.lockedString('header-name')),
        value: _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.lockedString('header value'),
        isOverride: true,
        nameEditable: true,
        valueEditable: 1 /* EditingAllowedStatus.Enabled */ 
    });
    var index = _class_private_field_get(this, _headerEditors).length - 1;
    _class_private_method_get(this, _updateOverrides, updateOverrides).call(this, _class_private_field_get(this, _headerEditors)[index].name, _class_private_field_get(this, _headerEditors)[index].value || '', index);
    _class_private_method_get(this, _render1, render2).call(this);
    var rows = this.shadow.querySelectorAll('devtools-header-section-row');
    var _Array_from_slice = _sliced_to_array(Array.from(rows).slice(-1), 1), lastRow = _Array_from_slice[0];
    lastRow === null || lastRow === void 0 ? void 0 : lastRow.focus();
    _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.actionTaken(_core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.UserMetrics.Action.HeaderOverrideHeaderAdded);
}
function render2() {
    var _this = this;
    if (!_class_private_field_get(this, _request1)) {
        return;
    }
    var headerDescriptors = _class_private_field_get(this, _headerEditors).map(function(headerEditor, index) {
        return _object_spread_props(_object_spread({}, _this.headerDetails[index], headerEditor), {
            isResponseHeader: true
        });
    });
    // Disabled until https://crbug.com/1079231 is fixed.
    // clang-format off
    render(html(_templateObject6(), headerDescriptors.map(function(header, index) {
        return html(_templateObject4(), _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.HeaderSectionRow.litTagName, {
            header: header
        }, _class_private_method_get(_this, _onHeaderEdited, onHeaderEdited), _class_private_method_get(_this, _onHeaderRemoved, onHeaderRemoved), _class_private_method_get(_this, _onEnableHeaderEditingClick, onEnableHeaderEditingClick), index, _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_11__.item('response-header'), _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_12__.HeaderSectionRow.litTagName);
    }), _class_private_field_get(this, _isEditingAllowed) === 1 /* EditingAllowedStatus.Enabled */  ? html(_templateObject5(), _ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__.Button.Button.litTagName, "outlined" /* Buttons.Button.Variant.OUTLINED */ , plusIconUrl, _class_private_method_get(this, _onAddHeaderClick, onAddHeaderClick), _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_11__.action('add-header').track({
        click: true
    }), i18nString(UIStrings.addHeader), _ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__.Button.Button.litTagName) : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_10__.nothing), this.shadow, {
        host: this
    });
// clang-format on
}
function onEnableHeaderEditingClick() {
    return _onEnableHeaderEditingClick1.apply(this, arguments);
}
function _onEnableHeaderEditingClick1() {
    _onEnableHeaderEditingClick1 = _async_to_generator(function() {
        var requestUrl, networkPersistanceManager;
        return _ts_generator(this, function(_state) {
            switch(_state.label){
                case 0:
                    if (!_class_private_field_get(this, _request1)) {
                        return [
                            2
                        ];
                    }
                    _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.actionTaken(_core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.UserMetrics.Action.HeaderOverrideEnableEditingClicked);
                    requestUrl = _class_private_field_get(this, _request1).url();
                    networkPersistanceManager = _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.instance();
                    if (!networkPersistanceManager.project()) return [
                        3,
                        2
                    ];
                    _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled').set(true);
                    return [
                        4,
                        networkPersistanceManager.getOrCreateHeadersUISourceCodeFromUrl(requestUrl)
                    ];
                case 1:
                    _state.sent();
                    return [
                        3,
                        3
                    ];
                case 2:
                    _ui_legacy_legacy_js__WEBPACK_IMPORTED_MODULE_9__.InspectorView.InspectorView.instance().displaySelectOverrideFolderInfobar(/*#__PURE__*/ _async_to_generator(function() {
                        return _ts_generator(this, function(_state) {
                            switch(_state.label){
                                case 0:
                                    return [
                                        4,
                                        _panels_sources_sources_js__WEBPACK_IMPORTED_MODULE_7__.SourcesNavigator.OverridesNavigatorView.instance().setupNewWorkspace()
                                    ];
                                case 1:
                                    _state.sent();
                                    return [
                                        4,
                                        networkPersistanceManager.getOrCreateHeadersUISourceCodeFromUrl(requestUrl)
                                    ];
                                case 2:
                                    _state.sent();
                                    return [
                                        2
                                    ];
                            }
                        });
                    }));
                    _state.label = 3;
                case 3:
                    return [
                        2
                    ];
            }
        });
    });
    return _onEnableHeaderEditingClick1.apply(this, arguments);
}
customElements.define('devtools-response-header-section', ResponseHeaderSection);
var BlockedReasonDetails = new Map([
    [
        "coep-frame-resource-needs-coep-header" /* Protocol.Network.BlockedReason.CoepFrameResourceNeedsCoepHeader */ ,
        {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString('cross-origin-embedder-policy'),
            value: null,
            blockedDetails: {
                explanation: i18nLazyString(UIStrings.toEmbedThisFrameInYourDocument),
                examples: [
                    {
                        codeSnippet: 'Cross-Origin-Embedder-Policy: require-corp',
                        comment: undefined
                    }
                ],
                link: {
                    url: 'https://web.dev/coop-coep/'
                }
            }
        }
    ],
    [
        "corp-not-same-origin-after-defaulted-to-same-origin-by-coep" /* Protocol.Network.BlockedReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep */ ,
        {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),
            value: null,
            blockedDetails: {
                explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferent),
                examples: [
                    {
                        codeSnippet: 'Cross-Origin-Resource-Policy: same-site',
                        comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd)
                    },
                    {
                        codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',
                        comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn)
                    }
                ],
                link: {
                    url: 'https://web.dev/coop-coep/'
                }
            }
        }
    ],
    [
        "coop-sandboxed-iframe-cannot-navigate-to-coop-page" /* Protocol.Network.BlockedReason.CoopSandboxedIframeCannotNavigateToCoopPage */ ,
        {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString('cross-origin-opener-policy'),
            value: null,
            headerValueIncorrect: false,
            blockedDetails: {
                explanation: i18nLazyString(UIStrings.thisDocumentWasBlockedFrom),
                examples: [],
                link: {
                    url: 'https://web.dev/coop-coep/'
                }
            }
        }
    ],
    [
        "corp-not-same-site" /* Protocol.Network.BlockedReason.CorpNotSameSite */ ,
        {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),
            value: null,
            headerValueIncorrect: true,
            blockedDetails: {
                explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentSite),
                examples: [
                    {
                        codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',
                        comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn)
                    }
                ],
                link: null
            }
        }
    ],
    [
        "corp-not-same-origin" /* Protocol.Network.BlockedReason.CorpNotSameOrigin */ ,
        {
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),
            value: null,
            headerValueIncorrect: true,
            blockedDetails: {
                explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentOrigin),
                examples: [
                    {
                        codeSnippet: 'Cross-Origin-Resource-Policy: same-site',
                        comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd)
                    },
                    {
                        codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',
                        comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn)
                    }
                ],
                link: null
            }
        }
    ]
]); //# sourceMappingURL=ResponseHeaderSection.js.map


}),

}]);