"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["panels_network_components_RequestHeadersView_js"],{

/***/ "./panels/network/components/RequestHeaderSection.css.js":
/*!***************************************************************!*\
  !*** ./panels/network/components/RequestHeaderSection.css.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// IMPORTANT: this file is auto generated. Please do not edit this file.
/* istanbul ignore file */
const styles = new CSSStyleSheet();
styles.replaceSync(
`/*
 * Copyright 2022 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

:host {
  display: block;
}

devtools-header-section-row:last-of-type {
  margin-bottom: 10px;
}

devtools-header-section-row:first-of-type {
  margin-top: 2px;
}

.call-to-action {
  background-color: var(--sys-color-neutral-container);
  padding: 8px;
  border-radius: 5px;
  margin: 4px;
}

.call-to-action-body {
  padding: 6px 0;
  margin-left: 9.5px;
  border-left: 2px solid var(--issue-color-yellow);
  padding-left: 18px;
  line-height: 20px;
}

.call-to-action .explanation {
  font-weight: bold;
}

.call-to-action code {
  font-size: 90%;
}

.call-to-action .example .comment::before {
  content: " — ";
}

.link,
.devtools-link {
  color: var(--sys-color-primary);
  text-decoration: underline;
  cursor: pointer;
  outline-offset: 2px;
}

.explanation .link {
  font-weight: normal;
}

.inline-icon {
  vertical-align: middle;
}

@media (forced-colors: active) {
  .link,
  .devtools-link {
    color: linktext;
    text-decoration-color: linktext;
  }
}

/*# sourceURL=RequestHeaderSection.css */
`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);


/***/ }),

/***/ "./panels/network/components/RequestHeaderSection.js":
/*!***********************************************************!*\
  !*** ./panels/network/components/RequestHeaderSection.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RequestHeaderSection: () => (/* binding */ RequestHeaderSection)
/* harmony export */ });
/* harmony import */ var _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/i18n/i18n.js */ "./core/i18n/i18n.js");
/* harmony import */ var _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/platform/platform.js */ "./core/platform/platform.js");
/* harmony import */ var _ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/components/icon_button/icon_button.js */ "./ui/components/icon_button/icon_button.js");
/* harmony import */ var _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/lit-html/lit-html.js */ "./ui/lit-html/lit-html.js");
/* harmony import */ var _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui/visual_logging/visual_logging.js */ "./ui/visual_logging/visual_logging.js");
/* harmony import */ var _forward_forward_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../forward/forward.js */ "./panels/network/forward/forward.js");
/* harmony import */ var _HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HeaderSectionRow.js */ "./panels/network/components/HeaderSectionRow.js");
/* harmony import */ var _RequestHeaderSection_css_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RequestHeaderSection.css.js */ "./panels/network/components/RequestHeaderSection.css.js");
// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.








const { render, html } = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__;
const UIStrings = {
    /**
     *@description Text that is usually a hyperlink to more documentation
     */
    learnMore: 'Learn more',
    /**
     *@description Message to explain lack of raw headers for a particular network request
     */
    provisionalHeadersAreShownDisableCache: 'Provisional headers are shown. Disable cache to see full headers.',
    /**
     *@description Tooltip to explain lack of raw headers for a particular network request
     */
    onlyProvisionalHeadersAre: 'Only provisional headers are available because this request was not sent over the network and instead was served from a local cache, which doesn’t store the original request headers. Disable cache to see full request headers.',
    /**
     *@description Message to explain lack of raw headers for a particular network request
     */
    provisionalHeadersAreShown: 'Provisional headers are shown.',
};
const str_ = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__.i18n.registerUIStrings('panels/network/components/RequestHeaderSection.ts', UIStrings);
const i18nString = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__.i18n.getLocalizedString.bind(undefined, str_);
class RequestHeaderSection extends HTMLElement {
    static litTagName = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.literal `devtools-request-header-section`;
    #shadow = this.attachShadow({ mode: 'open' });
    #request;
    #headers = [];
    connectedCallback() {
        this.#shadow.adoptedStyleSheets = [_RequestHeaderSection_css_js__WEBPACK_IMPORTED_MODULE_7__["default"]];
    }
    set data(data) {
        this.#request = data.request;
        this.#headers = this.#request.requestHeaders().map(header => ({
            name: _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_1__.StringUtilities.toLowerCaseString(header.name),
            value: header.value,
            valueEditable: 2 /* EditingAllowedStatus.Forbidden */,
        }));
        this.#headers.sort((a, b) => _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_1__.StringUtilities.compare(a.name, b.name));
        if (data.toReveal?.section === "Request" /* NetworkForward.UIRequestLocation.UIHeaderSection.Request */) {
            this.#headers.filter(header => header.name === data.toReveal?.header?.toLowerCase()).forEach(header => {
                header.highlight = true;
            });
        }
        this.#render();
    }
    #render() {
        if (!this.#request) {
            return;
        }
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        render(html `
      ${this.#maybeRenderProvisionalHeadersWarning()}
      ${this.#headers.map(header => html `
        <${_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_6__.HeaderSectionRow.litTagName}
          .data=${{ header: header }}
          jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_4__.item('request-header')}
        ></${_HeaderSectionRow_js__WEBPACK_IMPORTED_MODULE_6__.HeaderSectionRow.litTagName}>
      `)}
    `, this.#shadow, { host: this });
        // clang-format on
    }
    #maybeRenderProvisionalHeadersWarning() {
        if (!this.#request || this.#request.requestHeadersText() !== undefined) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__.nothing;
        }
        let cautionText;
        let cautionTitle = '';
        if (this.#request.cachedInMemory() || this.#request.cached()) {
            cautionText = i18nString(UIStrings.provisionalHeadersAreShownDisableCache);
            cautionTitle = i18nString(UIStrings.onlyProvisionalHeadersAre);
        }
        else {
            cautionText = i18nString(UIStrings.provisionalHeadersAreShown);
        }
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <div class="call-to-action">
        <div class="call-to-action-body">
          <div class="explanation" title=${cautionTitle}>
            <${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__.Icon.Icon.litTagName} class="inline-icon" .data=${{
            iconName: 'warning-filled',
            color: 'var(--icon-warning)',
            width: '16px',
            height: '16px',
        }}>
            </${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__.Icon.Icon.litTagName}>
            ${cautionText} <x-link href="https://developer.chrome.com/docs/devtools/network/reference/#provisional-headers" class="link">${i18nString(UIStrings.learnMore)}</x-link>
          </div>
        </div>
      </div>
    `;
        // clang-format on
    }
}
customElements.define('devtools-request-header-section', RequestHeaderSection);
//# sourceMappingURL=RequestHeaderSection.js.map

/***/ }),

/***/ "./panels/network/components/RequestHeadersView.css.js":
/*!*************************************************************!*\
  !*** ./panels/network/components/RequestHeadersView.css.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// IMPORTANT: this file is auto generated. Please do not edit this file.
/* istanbul ignore file */
const styles = new CSSStyleSheet();
styles.replaceSync(
`/*
 * Copyright 2022 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

.header {
  background-color: var(--sys-color-surface1);
  border-bottom: 1px solid var(--sys-color-divider);
  border-top: 1px solid var(--sys-color-divider);
  line-height: 25px;
  padding: 0 5px;
}

.header::marker {
  font-size: 11px;
  line-height: 1;
}

.header:focus {
  background-color: var(--sys-color-state-header-hover);
}

details[open] .header-count {
  display: none;
}

details .hide-when-closed {
  display: none;
}

details[open] .hide-when-closed {
  display: block;
}

details summary input {
  vertical-align: middle;
}

.row {
  display: flex;
  line-height: 20px;
  padding-left: 8px;
  gap: 12px;
  user-select: text;
}

div.raw-headers-row {
  display: block;
}

.row:first-of-type {
  margin-top: 2px;
}

.row:last-child {
  margin-bottom: 10px;
}

.header-name {
  color: var(--sys-color-on-surface);
  font-weight: 400;
  width: 30%;
  min-width: 160px;
  max-width: 240px;
  flex-shrink: 0;
  text-transform: capitalize;
}

.header-value {
  word-break: break-all;
  display: flex;
  align-items: center;
  gap: 2px;
}

.header-name,
.header-value {
  &::selection {
    color: var(--sys-color-on-tonal-container);
    background-color: var(--sys-color-tonal-container);
  }
}

.green-circle::before,
.red-circle::before,
.yellow-circle::before {
  content: "";
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 6px;
  vertical-align: text-top;
  margin-right: 2px;
}

.green-circle::before {
  background-color: var(--sys-color-green-bright);
}

.red-circle::before {
  background-color: var(--sys-color-error-bright);
}

.yellow-circle::before {
  background-color: var(--issue-color-yellow);
}

.status-with-comment {
  color: var(--sys-color-token-subtle);
}

.raw-headers {
  font-family: var(--source-code-font-family);
  font-size: var(--source-code-font-size);
  white-space: pre-wrap;
  word-break: break-all;
}

.link,
.devtools-link {
  color: var(--sys-color-primary);
  text-decoration: underline;
  cursor: pointer;
  outline-offset: 2px;
}

.inline-icon {
  vertical-align: middle;
}

.header-grid-container {
  display: inline-grid;
  grid-template-columns: 156px 50px 1fr;
  grid-gap: 4px;
  /* Make this fit into the same line as the summary marker */
  width: calc(100% - 15px);
}

.header-grid-container div:last-child {
  text-align: right;
}

.header .devtools-link {
  color: var(--sys-color-on-surface);
}

x-link { /* stylelint-disable-line selector-type-no-unknown */
  position: relative;
}

x-link .inline-icon { /* stylelint-disable-line selector-type-no-unknown */
  padding-right: 3px;
}

.purple.dot::before {
  background-color: var(--sys-color-purple-bright);
  content: var(--image-file-empty);
  width: 6px;
  height: 6px;
  border-radius: 50%;
  outline: 1px solid var(--icon-gap-toolbar);
  left: 9px;
  position: absolute;
  top: 11px;
  z-index: 1;
}

summary label input[type="checkbox"] {
  margin-top: 1px;
}

/*# sourceURL=RequestHeadersView.css */
`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);


/***/ }),

/***/ "./panels/network/components/RequestHeadersView.js":
/*!*********************************************************!*\
  !*** ./panels/network/components/RequestHeadersView.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Category: () => (/* binding */ Category),
/* harmony export */   RequestHeadersView: () => (/* binding */ RequestHeadersView),
/* harmony export */   ToggleRawHeadersEvent: () => (/* binding */ ToggleRawHeadersEvent)
/* harmony export */ });
/* harmony import */ var _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/common/common.js */ "./core/common/common.js");
/* harmony import */ var _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/host/host.js */ "./core/host/host.js");
/* harmony import */ var _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/i18n/i18n.js */ "./core/i18n/i18n.js");
/* harmony import */ var _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/platform/platform.js */ "./core/platform/platform.js");
/* harmony import */ var _core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/sdk/sdk.js */ "./core/sdk/sdk.js");
/* harmony import */ var _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/persistence/persistence.js */ "./models/persistence/persistence.js");
/* harmony import */ var _models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../models/workspace/workspace.js */ "./models/workspace/workspace.js");
/* harmony import */ var _panels_network_forward_forward_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../panels/network/forward/forward.js */ "./panels/network/forward/forward.js");
/* harmony import */ var _ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui/components/buttons/buttons.js */ "./ui/components/buttons/buttons.js");
/* harmony import */ var _ui_components_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../ui/components/helpers/helpers.js */ "./ui/components/helpers/helpers.js");
/* harmony import */ var _ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../ui/components/icon_button/icon_button.js */ "./ui/components/icon_button/icon_button.js");
/* harmony import */ var _ui_components_input_input_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../ui/components/input/input.js */ "./ui/components/input/input.js");
/* harmony import */ var _ui_components_legacy_wrapper_legacy_wrapper_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../ui/components/legacy_wrapper/legacy_wrapper.js */ "./ui/components/legacy_wrapper/legacy_wrapper.js");
/* harmony import */ var _ui_components_render_coordinator_render_coordinator_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../ui/components/render_coordinator/render_coordinator.js */ "./ui/components/render_coordinator/render_coordinator.js");
/* harmony import */ var _ui_legacy_legacy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../ui/legacy/legacy.js */ "./ui/legacy/legacy.js");
/* harmony import */ var _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../ui/lit-html/lit-html.js */ "./ui/lit-html/lit-html.js");
/* harmony import */ var _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../ui/visual_logging/visual_logging.js */ "./ui/visual_logging/visual_logging.js");
/* harmony import */ var _sources_sources_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../sources/sources.js */ "./panels/sources/sources.js");
/* harmony import */ var _RequestHeaderSection_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./RequestHeaderSection.js */ "./panels/network/components/RequestHeaderSection.js");
/* harmony import */ var _RequestHeadersView_css_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./RequestHeadersView.css.js */ "./panels/network/components/RequestHeadersView.css.js");
/* harmony import */ var _ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ResponseHeaderSection.js */ "./panels/network/components/ResponseHeaderSection.js");
// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.





















const RAW_HEADER_CUTOFF = 3000;
const { render, html } = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__;
const UIStrings = {
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromDiskCache: '(from disk cache)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromMemoryCache: '(from memory cache)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromEarlyHints: '(from early hints)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromPrefetchCache: '(from prefetch cache)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromServiceWorker: '(from `service worker`)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromSignedexchange: '(from signed-exchange)',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    fromWebBundle: '(from Web Bundle)',
    /**
     *@description Section header for a list of the main aspects of a http request
     */
    general: 'General',
    /**
     *@description Label for a checkbox to switch between raw and parsed headers
     */
    raw: 'Raw',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    referrerPolicy: 'Referrer Policy',
    /**
     *@description Text in Network Log View Columns of the Network panel
     */
    remoteAddress: 'Remote Address',
    /**
     *@description Text in Request Headers View of the Network panel
     */
    requestHeaders: 'Request Headers',
    /**
     *@description The HTTP method of a request
     */
    requestMethod: 'Request Method',
    /**
     *@description The URL of a request
     */
    requestUrl: 'Request URL',
    /**
     *@description A context menu item in the Network Log View Columns of the Network panel
     */
    responseHeaders: 'Response Headers',
    /**
     *@description A context menu item in the Network Log View Columns of the Network panel
     */
    earlyHintsHeaders: 'Early Hints Headers',
    /**
     *@description Title text for a link to the Sources panel to the file containing the header override definitions
     */
    revealHeaderOverrides: 'Reveal header override definitions',
    /**
     *@description Text to show more content
     */
    showMore: 'Show more',
    /**
     *@description HTTP response code
     */
    statusCode: 'Status Code',
};
const str_ = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.registerUIStrings('panels/network/components/RequestHeadersView.ts', UIStrings);
const i18nString = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_2__.i18n.getLocalizedString.bind(undefined, str_);
const coordinator = _ui_components_render_coordinator_render_coordinator_js__WEBPACK_IMPORTED_MODULE_13__.RenderCoordinator.RenderCoordinator.instance();
class RequestHeadersView extends _ui_components_legacy_wrapper_legacy_wrapper_js__WEBPACK_IMPORTED_MODULE_12__.LegacyWrapper.WrappableComponent {
    #request;
    static litTagName = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.literal `devtools-request-headers`;
    #shadow = this.attachShadow({ mode: 'open' });
    #showResponseHeadersText = false;
    #showRequestHeadersText = false;
    #showResponseHeadersTextFull = false;
    #showRequestHeadersTextFull = false;
    #toReveal = undefined;
    #workspace = _models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__.Workspace.WorkspaceImpl.instance();
    constructor(request) {
        super();
        this.#request = request;
        this.setAttribute('jslog', `${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.pane('headers').track({ resize: true })}`);
    }
    wasShown() {
        this.#request.addEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);
        this.#request.addEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);
        this.#request.addEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.RequestHeadersChanged, this.#refreshHeadersView, this);
        this.#request.addEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.ResponseHeadersChanged, this.#resetAndRefreshHeadersView, this);
        this.#toReveal = undefined;
        this.#refreshHeadersView();
    }
    willHide() {
        this.#request.removeEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);
        this.#request.removeEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);
        this.#request.removeEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.RequestHeadersChanged, this.#refreshHeadersView, this);
        this.#request.removeEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_4__.NetworkRequest.Events.ResponseHeadersChanged, this.#resetAndRefreshHeadersView, this);
    }
    #resetAndRefreshHeadersView() {
        this.#request.deleteAssociatedData(_ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__.RESPONSE_HEADER_SECTION_DATA_KEY);
        void this.render();
    }
    #refreshHeadersView() {
        void this.render();
    }
    revealHeader(section, header) {
        this.#toReveal = { section, header };
        void this.render();
    }
    connectedCallback() {
        this.#shadow.adoptedStyleSheets = [_RequestHeadersView_css_js__WEBPACK_IMPORTED_MODULE_19__["default"]];
        this.#workspace.addEventListener(_models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);
        this.#workspace.addEventListener(_models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);
        _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance()
            .moduleSetting('persistence-network-overrides-enabled')
            .addChangeListener(this.render, this);
    }
    disconnectedCallback() {
        this.#workspace.removeEventListener(_models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);
        this.#workspace.removeEventListener(_models_workspace_workspace_js__WEBPACK_IMPORTED_MODULE_6__.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);
        _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance()
            .moduleSetting('persistence-network-overrides-enabled')
            .removeChangeListener(this.render, this);
    }
    #uiSourceCodeAddedOrRemoved(event) {
        if (this.#getHeaderOverridesFileUrl() === event.data.url()) {
            void this.render();
        }
    }
    async render() {
        if (!this.#request) {
            return;
        }
        return coordinator.write(() => {
            // Disabled until https://crbug.com/1079231 is fixed.
            // clang-format off
            render(html `
        ${this.#renderGeneralSection()}
        ${this.#renderEarlyHintsHeaders()}
        ${this.#renderResponseHeaders()}
        ${this.#renderRequestHeaders()}
      `, this.#shadow, { host: this });
            // clang-format on
        });
    }
    #renderEarlyHintsHeaders() {
        if (!this.#request || !this.#request.earlyHintsHeaders || this.#request.earlyHintsHeaders.length === 0) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing;
        }
        const toggleShowRaw = () => {
            this.#showResponseHeadersText = !this.#showResponseHeadersText;
            void this.render();
        };
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <${Category.litTagName}
        @togglerawevent=${toggleShowRaw}
        .data=${{
            name: 'early-hints-headers',
            title: i18nString(UIStrings.earlyHintsHeaders),
            headerCount: this.#request.earlyHintsHeaders.length,
            checked: undefined,
            additionalContent: undefined,
            forceOpen: this.#toReveal?.section === "EarlyHints" /* NetworkForward.UIRequestLocation.UIHeaderSection.EarlyHints */,
            loggingContext: 'early-hints-headers',
        }}
        aria-label=${i18nString(UIStrings.earlyHintsHeaders)}
      >
        ${this.#showResponseHeadersText ?
            this.#renderRawHeaders(this.#request.responseHeadersText, true) : html `
          <${_ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__.EarlyHintsHeaderSection.litTagName} .data=${{
            request: this.#request,
            toReveal: this.#toReveal,
        }}></${_ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__.EarlyHintsHeaderSection.litTagName}>
        `}
      </${Category.litTagName}>
    `;
        // clang-format on
    }
    #renderResponseHeaders() {
        if (!this.#request) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing;
        }
        const toggleShowRaw = () => {
            this.#showResponseHeadersText = !this.#showResponseHeadersText;
            void this.render();
        };
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <${Category.litTagName}
        @togglerawevent=${toggleShowRaw}
        .data=${{
            name: 'response-headers',
            title: i18nString(UIStrings.responseHeaders),
            headerCount: this.#request.sortedResponseHeaders.length,
            checked: this.#request.responseHeadersText ? this.#showResponseHeadersText : undefined,
            additionalContent: this.#renderHeaderOverridesLink(),
            forceOpen: this.#toReveal?.section === "Response" /* NetworkForward.UIRequestLocation.UIHeaderSection.Response */,
            loggingContext: 'response-headers',
        }}
        aria-label=${i18nString(UIStrings.responseHeaders)}
      >
        ${this.#showResponseHeadersText ?
            this.#renderRawHeaders(this.#request.responseHeadersText, true) : html `
          <${_ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__.ResponseHeaderSection.litTagName} .data=${{
            request: this.#request,
            toReveal: this.#toReveal,
        }} jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.section('response-headers')}></${_ResponseHeaderSection_js__WEBPACK_IMPORTED_MODULE_20__.ResponseHeaderSection.litTagName}>
        `}
      </${Category.litTagName}>
    `;
        // clang-format on
    }
    #renderHeaderOverridesLink() {
        if (!this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl())) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing;
        }
        const overridesSetting = _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled');
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        const fileIcon = html `
      <${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_10__.Icon.Icon.litTagName} class=${overridesSetting.get() ? 'inline-icon dot purple' : 'inline-icon'} .data=${{
            iconName: 'document',
            width: '16px',
            height: '16px',
        }}>
      </${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_10__.Icon.Icon.litTagName}>`;
        // clang-format on
        const revealHeadersFile = (event) => {
            event.preventDefault();
            const uiSourceCode = this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl());
            if (uiSourceCode) {
                _sources_sources_js__WEBPACK_IMPORTED_MODULE_17__.SourcesPanel.SourcesPanel.instance().showUISourceCode(uiSourceCode);
                void _sources_sources_js__WEBPACK_IMPORTED_MODULE_17__.SourcesPanel.SourcesPanel.instance().revealInNavigator(uiSourceCode);
            }
        };
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <x-link
          href="https://goo.gle/devtools-override"
          class="link devtools-link"
          jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.link('devtools-override').track({ click: true })}
      >
        <${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_10__.Icon.Icon.litTagName} class="inline-icon" .data=${{
            iconName: 'help',
            width: '16px',
            height: '16px',
        }}>
        </${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_10__.Icon.Icon.litTagName}
      ></x-link>
      <x-link
          @click=${revealHeadersFile}
          class="link devtools-link"
          title=${UIStrings.revealHeaderOverrides}
          jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.link('reveal-header-overrides').track({ click: true })}
      >
        ${fileIcon}${_models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.HEADERS_FILENAME}
      </x-link>
    `;
        // clang-format on
    }
    #getHeaderOverridesFileUrl() {
        if (!this.#request) {
            return _core_platform_platform_js__WEBPACK_IMPORTED_MODULE_3__.DevToolsPath.EmptyUrlString;
        }
        const fileUrl = _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.NetworkPersistenceManager.instance().fileUrlFromNetworkUrl(this.#request.url(), /* ignoreInactive */ true);
        return fileUrl.substring(0, fileUrl.lastIndexOf('/')) + '/' +
            _models_persistence_persistence_js__WEBPACK_IMPORTED_MODULE_5__.NetworkPersistenceManager.HEADERS_FILENAME;
    }
    #renderRequestHeaders() {
        if (!this.#request) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing;
        }
        const requestHeadersText = this.#request.requestHeadersText();
        const toggleShowRaw = () => {
            this.#showRequestHeadersText = !this.#showRequestHeadersText;
            void this.render();
        };
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <${Category.litTagName}
        @togglerawevent=${toggleShowRaw}
        .data=${{
            name: 'request-headers',
            title: i18nString(UIStrings.requestHeaders),
            headerCount: this.#request.requestHeaders().length,
            checked: requestHeadersText ? this.#showRequestHeadersText : undefined,
            forceOpen: this.#toReveal?.section === "Request" /* NetworkForward.UIRequestLocation.UIHeaderSection.Request */,
            loggingContext: 'request-headers',
        }}
        aria-label=${i18nString(UIStrings.requestHeaders)}
      >
        ${(this.#showRequestHeadersText && requestHeadersText) ?
            this.#renderRawHeaders(requestHeadersText, false) : html `
          <${_RequestHeaderSection_js__WEBPACK_IMPORTED_MODULE_18__.RequestHeaderSection.litTagName} .data=${{
            request: this.#request,
            toReveal: this.#toReveal,
        }} jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.section('request-headers')}></${_RequestHeaderSection_js__WEBPACK_IMPORTED_MODULE_18__.RequestHeaderSection.litTagName}>
        `}
      </${Category.litTagName}>
    `;
        // clang-format on
    }
    #renderRawHeaders(rawHeadersText, forResponseHeaders) {
        const trimmed = rawHeadersText.trim();
        const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;
        const isShortened = !showFull && trimmed.length > RAW_HEADER_CUTOFF;
        const showMore = () => {
            if (forResponseHeaders) {
                this.#showResponseHeadersTextFull = true;
            }
            else {
                this.#showRequestHeadersTextFull = true;
            }
            void this.render();
        };
        const onContextMenuOpen = (event) => {
            const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;
            if (!showFull) {
                const contextMenu = new _ui_legacy_legacy_js__WEBPACK_IMPORTED_MODULE_14__.ContextMenu.ContextMenu(event);
                const section = contextMenu.newSection();
                section.appendItem(i18nString(UIStrings.showMore), showMore, { jslogContext: 'show-more' });
                void contextMenu.show();
            }
        };
        const addContextMenuListener = (el) => {
            if (isShortened) {
                el.addEventListener('contextmenu', onContextMenuOpen);
            }
        };
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <div class="row raw-headers-row" on-render=${_ui_components_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_9__.Directives.nodeRenderedCallback(addContextMenuListener)}>
        <div class="raw-headers">${isShortened ? trimmed.substring(0, RAW_HEADER_CUTOFF) : trimmed}</div>
        ${isShortened ? html `
          <${_ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__.Button.Button.litTagName}
            .size=${"SMALL" /* Buttons.Button.Size.SMALL */}
            .variant=${"outlined" /* Buttons.Button.Variant.OUTLINED */}
            @click=${showMore}
            jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.action('raw-headers-show-more').track({ click: true })}
          >${i18nString(UIStrings.showMore)}</${_ui_components_buttons_buttons_js__WEBPACK_IMPORTED_MODULE_8__.Button.Button.litTagName}>
        ` : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
      </div>
    `;
        // clang-format on
    }
    #renderGeneralSection() {
        if (!this.#request) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing;
        }
        const statusClasses = ['status'];
        if (this.#request.statusCode < 300 || this.#request.statusCode === 304) {
            statusClasses.push('green-circle');
        }
        else if (this.#request.statusCode < 400) {
            statusClasses.push('yellow-circle');
        }
        else {
            statusClasses.push('red-circle');
        }
        let comment = '';
        if (this.#request.cachedInMemory()) {
            comment = i18nString(UIStrings.fromMemoryCache);
        }
        else if (this.#request.fromEarlyHints()) {
            comment = i18nString(UIStrings.fromEarlyHints);
        }
        else if (this.#request.fetchedViaServiceWorker) {
            comment = i18nString(UIStrings.fromServiceWorker);
        }
        else if (this.#request.redirectSourceSignedExchangeInfoHasNoErrors()) {
            comment = i18nString(UIStrings.fromSignedexchange);
        }
        else if (this.#request.webBundleInnerRequestInfo()) {
            comment = i18nString(UIStrings.fromWebBundle);
        }
        else if (this.#request.fromPrefetchCache()) {
            comment = i18nString(UIStrings.fromPrefetchCache);
        }
        else if (this.#request.cached()) {
            comment = i18nString(UIStrings.fromDiskCache);
        }
        if (comment) {
            statusClasses.push('status-with-comment');
        }
        const statusText = [this.#request.statusCode, this.#request.getInferredStatusText(), comment].join(' ');
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        return html `
      <${Category.litTagName}
        .data=${{
            name: 'general',
            title: i18nString(UIStrings.general),
            forceOpen: this.#toReveal?.section === "General" /* NetworkForward.UIRequestLocation.UIHeaderSection.General */,
            loggingContext: 'general',
        }}
        aria-label=${i18nString(UIStrings.general)}
      >
      <div jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.section('general')}>
        ${this.#renderGeneralRow(i18nString(UIStrings.requestUrl), this.#request.url())}
        ${this.#request.statusCode ? this.#renderGeneralRow(i18nString(UIStrings.requestMethod), this.#request.requestMethod) : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
        ${this.#request.statusCode ? this.#renderGeneralRow(i18nString(UIStrings.statusCode), statusText, statusClasses) : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
        ${this.#request.remoteAddress() ? this.#renderGeneralRow(i18nString(UIStrings.remoteAddress), this.#request.remoteAddress()) : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
        ${this.#request.referrerPolicy() ? this.#renderGeneralRow(i18nString(UIStrings.referrerPolicy), String(this.#request.referrerPolicy())) : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
      </div>
      </${Category.litTagName}>
    `;
        // clang-format on
    }
    #renderGeneralRow(name, value, classNames) {
        const isHighlighted = this.#toReveal?.section === "General" /* NetworkForward.UIRequestLocation.UIHeaderSection.General */ &&
            name.toLowerCase() === this.#toReveal?.header?.toLowerCase();
        return html `
      <div class="row ${isHighlighted ? 'header-highlight' : ''}">
        <div class="header-name">${name}:</div>
        <div
          class="header-value ${classNames?.join(' ')}"
          @copy=${() => _core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.userMetrics.actionTaken(_core_host_host_js__WEBPACK_IMPORTED_MODULE_1__.UserMetrics.Action.NetworkPanelCopyValue)}
        >${value}</div>
      </div>
    `;
    }
}
class ToggleRawHeadersEvent extends Event {
    static eventName = 'togglerawevent';
    constructor() {
        super(ToggleRawHeadersEvent.eventName, {});
    }
}
class Category extends HTMLElement {
    static litTagName = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.literal `devtools-request-headers-category`;
    #shadow = this.attachShadow({ mode: 'open' });
    #expandedSetting;
    #title = _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.UIString.LocalizedEmptyString;
    #headerCount = undefined;
    #checked = undefined;
    #additionalContent = undefined;
    #forceOpen = undefined;
    #loggingContext = '';
    connectedCallback() {
        this.#shadow.adoptedStyleSheets = [_RequestHeadersView_css_js__WEBPACK_IMPORTED_MODULE_19__["default"], _ui_components_input_input_js__WEBPACK_IMPORTED_MODULE_11__.checkboxStyles];
    }
    set data(data) {
        this.#title = data.title;
        this.#expandedSetting =
            _core_common_common_js__WEBPACK_IMPORTED_MODULE_0__.Settings.Settings.instance().createSetting('request-info-' + data.name + '-category-expanded', true);
        this.#headerCount = data.headerCount;
        this.#checked = data.checked;
        this.#additionalContent = data.additionalContent;
        this.#forceOpen = data.forceOpen;
        this.#loggingContext = data.loggingContext;
        this.#render();
    }
    #onCheckboxToggle() {
        this.dispatchEvent(new ToggleRawHeadersEvent());
    }
    #render() {
        const isOpen = (this.#expandedSetting ? this.#expandedSetting.get() : true) || this.#forceOpen;
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        render(html `
      <details ?open=${isOpen} @toggle=${this.#onToggle}>
        <summary
          class="header"
          @keydown=${this.#onSummaryKeyDown}
          jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.sectionHeader().track({ click: true }).context(this.#loggingContext)}
        >
          <div class="header-grid-container">
            <div>
              ${this.#title}${this.#headerCount !== undefined ?
            html `<span class="header-count"> (${this.#headerCount})</span>` :
            _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
            </div>
            <div class="hide-when-closed">
              ${this.#checked !== undefined ? html `
                <label><input
                    type="checkbox"
                    .checked=${this.#checked}
                    @change=${this.#onCheckboxToggle}
                    jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_16__.toggle('raw-headers').track({ change: true })}
                />${i18nString(UIStrings.raw)}</label>
              ` : _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_15__.nothing}
            </div>
            <div class="hide-when-closed">${this.#additionalContent}</div>
        </summary>
        <slot></slot>
      </details>
    `, this.#shadow, { host: this });
        // clang-format on
    }
    #onSummaryKeyDown(event) {
        if (!event.target) {
            return;
        }
        const summaryElement = event.target;
        const detailsElement = summaryElement.parentElement;
        if (!detailsElement) {
            throw new Error('<details> element is not found for a <summary> element');
        }
        switch (event.key) {
            case 'ArrowLeft':
                detailsElement.open = false;
                break;
            case 'ArrowRight':
                detailsElement.open = true;
                break;
        }
    }
    #onToggle(event) {
        this.#expandedSetting?.set(event.target.open);
    }
}
customElements.define('devtools-request-headers', RequestHeadersView);
customElements.define('devtools-request-headers-category', Category);
//# sourceMappingURL=RequestHeadersView.js.map

/***/ })

}]);