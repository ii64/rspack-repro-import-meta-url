"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["panels_network_components_RequestTrustTokensView_js"],{

/***/ "./panels/network/components/RequestTrustTokensView.css.js":
/*!*****************************************************************!*\
  !*** ./panels/network/components/RequestTrustTokensView.css.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// IMPORTANT: this file is auto generated. Please do not edit this file.
/* istanbul ignore file */
const styles = new CSSStyleSheet();
styles.replaceSync(
`/*
 * Copyright 2021 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */
.code {
  font-family: var(--monospace-font-family);
  font-size: var(--monospace-font-size);
}

.issuers-list {
  display: flex;
  flex-direction: column;
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.status-icon {
  margin: 0 0.3em 2px 0;
  vertical-align: middle;
}

/*# sourceURL=RequestTrustTokensView.css */
`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);


/***/ }),

/***/ "./panels/network/components/RequestTrustTokensView.js":
/*!*************************************************************!*\
  !*** ./panels/network/components/RequestTrustTokensView.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RequestTrustTokensView: () => (/* binding */ RequestTrustTokensView),
/* harmony export */   statusConsideredSuccess: () => (/* binding */ statusConsideredSuccess)
/* harmony export */ });
/* harmony import */ var _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/i18n/i18n.js */ "./core/i18n/i18n.js");
/* harmony import */ var _core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/sdk/sdk.js */ "./core/sdk/sdk.js");
/* harmony import */ var _ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/components/icon_button/icon_button.js */ "./ui/components/icon_button/icon_button.js");
/* harmony import */ var _ui_components_legacy_wrapper_legacy_wrapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/components/legacy_wrapper/legacy_wrapper.js */ "./ui/components/legacy_wrapper/legacy_wrapper.js");
/* harmony import */ var _ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui/components/report_view/report_view.js */ "./ui/components/report_view/report_view.js");
/* harmony import */ var _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui/lit-html/lit-html.js */ "./ui/lit-html/lit-html.js");
/* harmony import */ var _ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui/visual_logging/visual_logging.js */ "./ui/visual_logging/visual_logging.js");
/* harmony import */ var _RequestTrustTokensView_css_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RequestTrustTokensView.css.js */ "./panels/network/components/RequestTrustTokensView.css.js");
// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.








const UIStrings = {
    /**
     *@description Section heading in the Trust Token tab
     */
    parameters: 'Parameters',
    /**
     *@description Text that refers to some types
     */
    type: 'Type',
    /**
     *@description Label for a Trust Token parameter
     */
    refreshPolicy: 'Refresh policy',
    /**
     *@description Label for a list if origins in the Trust Token tab
     */
    issuers: 'Issuers',
    /**
     *@description Label for a report field in the Network panel
     */
    topLevelOrigin: 'Top level origin',
    /**
     *@description Text for the issuer of an item
     */
    issuer: 'Issuer',
    /**
     *@description Heading of a report section in the Network panel
     */
    result: 'Result',
    /**
     *@description Text for the status of something
     */
    status: 'Status',
    /**
     *@description Label for a field in the Network panel
     */
    numberOfIssuedTokens: 'Number of issued tokens',
    /**
     * @description Text for the success status in the Network panel. Refers to the outcome of a network
     * request which will either be 'Success' or 'Failure'.
     */
    success: 'Success',
    /**
     *@description Text in the network panel for an error status
     */
    failure: 'Failure',
    /**
     *@description Detailed text for a success status in the Network panel
     */
    theOperationsResultWasServedFrom: 'The operations result was served from cache.',
    /**
     *@description Detailed text for a success status in the Network panel
     */
    theOperationWasFulfilledLocally: 'The operation was fulfilled locally, no request was sent.',
    /**
     *@description Text for an error status in the Network panel
     */
    theKeysForThisPSTIssuerAreUnavailable: 'The keys for this PST issuer are unavailable. The issuer may need to be registered via the Chrome registration process.',
    /**
     *@description Text for an error status in the Network panel
     */
    aClientprovidedArgumentWas: 'A client-provided argument was malformed or otherwise invalid.',
    /**
     *@description Text for an error status in the Network panel
     */
    eitherNoInputsForThisOperation: 'Either no inputs for this operation are available or the output exceeds the operations quota.',
    /**
     *@description Text for an error status in the Network panel
     */
    theServersResponseWasMalformedOr: 'The servers response was malformed or otherwise invalid.',
    /**
     *@description Text for an error status in the Network panel
     */
    theOperationFailedForAnUnknown: 'The operation failed for an unknown reason.',
};
const str_ = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__.i18n.registerUIStrings('panels/network/components/RequestTrustTokensView.ts', UIStrings);
const i18nString = _core_i18n_i18n_js__WEBPACK_IMPORTED_MODULE_0__.i18n.getLocalizedString.bind(undefined, str_);
class RequestTrustTokensView extends _ui_components_legacy_wrapper_legacy_wrapper_js__WEBPACK_IMPORTED_MODULE_3__.LegacyWrapper.WrappableComponent {
    static litTagName = _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.literal `devtools-trust-token-report`;
    #shadow = this.attachShadow({ mode: 'open' });
    #request;
    constructor(request) {
        super();
        this.#request = request;
    }
    wasShown() {
        this.#request.addEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_1__.NetworkRequest.Events.TrustTokenResultAdded, this.render, this);
        void this.render();
    }
    willHide() {
        this.#request.removeEventListener(_core_sdk_sdk_js__WEBPACK_IMPORTED_MODULE_1__.NetworkRequest.Events.TrustTokenResultAdded, this.render, this);
    }
    connectedCallback() {
        this.#shadow.adoptedStyleSheets = [_RequestTrustTokensView_css_js__WEBPACK_IMPORTED_MODULE_7__["default"]];
    }
    async render() {
        if (!this.#request) {
            throw new Error('Trying to render a Trust Token report without providing data');
        }
        // Disabled until https://crbug.com/1079231 is fixed.
        // clang-format off
        _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.render(_ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `<${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.Report.litTagName}>
        ${this.#renderParameterSection()}
        ${this.#renderResultSection()}
      </${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.Report.litTagName}>
    `, this.#shadow, { host: this });
        // clang-format on
    }
    #renderParameterSection() {
        const trustTokenParams = this.#request.trustTokenParams();
        if (!trustTokenParams) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionHeader.litTagName} jslog=${_ui_visual_logging_visual_logging_js__WEBPACK_IMPORTED_MODULE_6__.pane('trust-tokens').track({
            resize: true,
        })}>${i18nString(UIStrings.parameters)}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionHeader.litTagName}>
      ${renderRowWithCodeValue(i18nString(UIStrings.type), trustTokenParams.operation.toString())}
      ${this.#renderRefreshPolicy(trustTokenParams)}
      ${this.#renderIssuers(trustTokenParams)}
      ${this.#renderIssuerAndTopLevelOriginFromResult()}
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionDivider.litTagName}></${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionDivider.litTagName}>
    `;
    }
    #renderRefreshPolicy(params) {
        if (params.operation !== "Redemption" /* Protocol.Network.TrustTokenOperationType.Redemption */) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return renderRowWithCodeValue(i18nString(UIStrings.refreshPolicy), params.refreshPolicy.toString());
    }
    #renderIssuers(params) {
        if (!params.issuers || params.issuers.length === 0) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.issuers)}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
        <ul class="issuers-list">
          ${params.issuers.map(issuer => _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `<li>${issuer}</li>`)}
        </ul>
      </${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
    `;
    }
    // The issuer and top level origin are technically parameters but reported in the
    // result structure due to the timing when they are calculated in the backend.
    // Nonetheless, we show them as part of the parameter section.
    #renderIssuerAndTopLevelOriginFromResult() {
        const trustTokenResult = this.#request.trustTokenOperationDoneEvent();
        if (!trustTokenResult) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
      ${renderSimpleRowIfValuePresent(i18nString(UIStrings.topLevelOrigin), trustTokenResult.topLevelOrigin)}
      ${renderSimpleRowIfValuePresent(i18nString(UIStrings.issuer), trustTokenResult.issuerOrigin)}`;
    }
    #renderResultSection() {
        const trustTokenResult = this.#request.trustTokenOperationDoneEvent();
        if (!trustTokenResult) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.result)}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionHeader.litTagName}>
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.status)}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
        <span>
          <${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__.Icon.Icon.litTagName} class="status-icon"
            .data=${getIconForStatusCode(trustTokenResult.status)}>
          </${_ui_components_icon_button_icon_button_js__WEBPACK_IMPORTED_MODULE_2__.Icon.Icon.litTagName}>
          <strong>${getSimplifiedStatusTextForStatusCode(trustTokenResult.status)}</strong>
          ${getDetailedTextForStatusCode(trustTokenResult.status)}
        </span>
      </${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
      ${this.#renderIssuedTokenCount(trustTokenResult)}
      <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionDivider.litTagName}></${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportSectionDivider.litTagName}>
      `;
    }
    #renderIssuedTokenCount(result) {
        if (result.type !== "Issuance" /* Protocol.Network.TrustTokenOperationType.Issuance */) {
            return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
        }
        return renderSimpleRowIfValuePresent(i18nString(UIStrings.numberOfIssuedTokens), result.issuedTokenCount);
    }
}
const SUCCESS_ICON_DATA = {
    color: 'var(--icon-checkmark-green)',
    iconName: 'check-circle',
    width: '16px',
    height: '16px',
};
const FAILURE_ICON_DATA = {
    color: 'var(--icon-error)',
    iconName: 'cross-circle-filled',
    width: '16px',
    height: '16px',
};
function statusConsideredSuccess(status) {
    return status === "Ok" /* Protocol.Network.TrustTokenOperationDoneEventStatus.Ok */ ||
        status === "AlreadyExists" /* Protocol.Network.TrustTokenOperationDoneEventStatus.AlreadyExists */ ||
        status === "FulfilledLocally" /* Protocol.Network.TrustTokenOperationDoneEventStatus.FulfilledLocally */;
}
function getIconForStatusCode(status) {
    return statusConsideredSuccess(status) ? SUCCESS_ICON_DATA : FAILURE_ICON_DATA;
}
function getSimplifiedStatusTextForStatusCode(status) {
    return statusConsideredSuccess(status) ? i18nString(UIStrings.success) : i18nString(UIStrings.failure);
}
function getDetailedTextForStatusCode(status) {
    switch (status) {
        case "Ok" /* Protocol.Network.TrustTokenOperationDoneEventStatus.Ok */:
            return null;
        case "AlreadyExists" /* Protocol.Network.TrustTokenOperationDoneEventStatus.AlreadyExists */:
            return i18nString(UIStrings.theOperationsResultWasServedFrom);
        case "FulfilledLocally" /* Protocol.Network.TrustTokenOperationDoneEventStatus.FulfilledLocally */:
            return i18nString(UIStrings.theOperationWasFulfilledLocally);
        case "InvalidArgument" /* Protocol.Network.TrustTokenOperationDoneEventStatus.InvalidArgument */:
            return i18nString(UIStrings.aClientprovidedArgumentWas);
        case "ResourceExhausted" /* Protocol.Network.TrustTokenOperationDoneEventStatus.ResourceExhausted */:
            return i18nString(UIStrings.eitherNoInputsForThisOperation);
        case "BadResponse" /* Protocol.Network.TrustTokenOperationDoneEventStatus.BadResponse */:
            return i18nString(UIStrings.theServersResponseWasMalformedOr);
        case "MissingIssuerKeys" /* Protocol.Network.TrustTokenOperationDoneEventStatus.MissingIssuerKeys */:
            return i18nString(UIStrings.theKeysForThisPSTIssuerAreUnavailable);
        case "FailedPrecondition" /* Protocol.Network.TrustTokenOperationDoneEventStatus.FailedPrecondition */:
        case "ResourceLimited" /* Protocol.Network.TrustTokenOperationDoneEventStatus.ResourceLimited */:
        case "InternalError" /* Protocol.Network.TrustTokenOperationDoneEventStatus.InternalError */:
        case "Unauthorized" /* Protocol.Network.TrustTokenOperationDoneEventStatus.Unauthorized */:
        case "UnknownError" /* Protocol.Network.TrustTokenOperationDoneEventStatus.UnknownError */:
            return i18nString(UIStrings.theOperationFailedForAnUnknown);
    }
}
function renderSimpleRowIfValuePresent(key, value) {
    if (value === undefined) {
        return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.nothing;
    }
    return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
    <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>${key}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>
    <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>${value}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
  `;
}
function renderRowWithCodeValue(key, value) {
    return _ui_lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_5__.html `
    <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>${key}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportKey.litTagName}>
    <${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName} class="code">${value}</${_ui_components_report_view_report_view_js__WEBPACK_IMPORTED_MODULE_4__.ReportView.ReportValue.litTagName}>
  `;
}
customElements.define('devtools-trust-token-report', RequestTrustTokensView);
//# sourceMappingURL=RequestTrustTokensView.js.map

/***/ })

}]);